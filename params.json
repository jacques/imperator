{"name":"Imperator","tagline":"","body":"## What is it?\r\n\r\nThis is the cloud CnC solution for sphonic clouds in the JPC and SDC environments.\r\n\r\nIt is designed to be simple, small and flexible. Unlike OpenStack and others.\r\n\r\nIt is written in NodeJS. It is to be extended as required. Don't be precious about it.\r\n\r\n## Licence\r\n\r\nThis project is released under the Apache 2.0 Licence.\r\n\r\n## Concepts\r\n\r\n```asciidoc\r\n   +------+    \r\n   |      |    \r\n   | USER |    \r\n   |      |    \r\n   +---+--+    \r\n       |         \r\n       |       \r\n+------+------+\r\n|             |\r\n| Environment |\r\n|             |\r\n+------+------+\r\n       |            \r\n       |       \r\n+------+------+\r\n|             |\r\n|  PLATFORM   |\r\n|             |\r\n+------+------+\r\n       |          \r\n       |       \r\n    +--+---+   \r\n    |      |   \r\n    | TIER |   \r\n    |      |   \r\n    +--+---+   \r\n       |            \r\n       |       \r\n  +----+----+  \r\n  |         |  \r\n  | MACHINE |  \r\n  |         |  \r\n  +---------+  \r\n```\r\n\r\n## Actions\r\n\r\n#### Create a USER\r\n\r\n#### Create an ENVIRONMENT\r\n\r\n#### Create a PLATFORM\r\n\r\n#### Create a TIER\r\n\r\n#### Create a MACHINE\r\n\r\n#### Create a PERSONA PACKAGE\r\n\r\n#### Create a STINGRAY CONFIG \r\n\r\n#### Create a BOOTSTRAP SCRIPT\r\n\r\n#### Create a ROLE\r\n\r\n\r\n## User\r\n\r\nThis container holds information about a user of Imperator. Examples of fields required can be seen\r\nin the json example below. We must also integrate DUOSEC 2FA into the security for this solution.\r\nThe DUOSEC integration API can be found at https://www.duosecurity.com/api. Salted passwords please.\r\n\r\nEach user will have a specific SSH key which they must use to login to any boxes on a given PLATFORM. We must store these somewhere and we MUST NOT allow the same ssh key to be used in more that ONE PLATFORM.\r\n\r\n```json\r\n{\r\n  \"user\": {\r\n    \"uuid\": \"965f91f0-e1b6-11e3-8b68-0800200c9a66\",\r\n    \"username\": \"\",\r\n    \"encrypted_password\": \"\",\r\n    \"two_factor_id\": \"\",\r\n    \"roles\": {\r\n      \"system_role_n\": \"IMPERATOR_PLATFORM_ROLES_HERE\",\r\n    },\r\n    \"environments\": {\r\n      \"environment_1\": {\r\n       \"roles\": {\r\n         \"system_role_1\": \"ENVIRONMENT_ROLES_HERE\",\r\n       },\r\n      },\r\n      \"environment_2\": {\r\n       \"roles\": {\r\n       },\r\n      }\r\n    }\r\n    \"platforms\": {\r\n      \"platform_uuid_1\":{\r\n        \"roles\":{\r\n\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nThe roles are the system actions which this user is permitted to perform.\r\n\r\n* Add new users\r\n* Suspend users (users can be reactivated)\r\n* Tombstone users (users can not be reactivated)\r\n* Create Environment configuration\r\n* Create Platform configurations\r\n* Create Tier configurations\r\n* Create Machine configurations\r\n* CRUD for cfengine roles assignable to Tiers and Machines\r\n* CRUD for networks on the platform\r\n\r\n\r\n### Environment\r\n\r\nThe ENVIRONMENT container holds information about a particular cloud environment. There is only\r\none per environment and access is restricted by whatever is set at the USER level.\r\n\r\nA unique UUID identifies the particular environment to the system. It has a common name, a user\r\nfirendly name. There is also a system name where only alphanums and the underscore character are\r\nallowed. A list of platform UUIDs which associate platforms with this ENVIRONMENT is also present.\r\n\r\n```json\r\n{\r\n  \"environment\": {\r\n    \"uuid\": \"965f91f0-e1b6-11e3-8b68-0800200c9a66\",\r\n    \"name\": \"Joyent Public Cloud AMS 1\",\r\n    \"system_name\": \"joyent_public_cloud_ams_1\"\r\n    \"platforms\": {\r\n      \"platform_uuid_1\": \"uuid_here\",\r\n      \"platform_uuid_n\": \"uuid_here\"\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n### Platforms\r\n\r\nThe PLATFORM container holds information about a logical platform within an ENVIRONMENT. Each\r\nplatform has a unique UUID which identifies in within Imperator. There is a common name which is\r\nuser friendly as well as a system name which is machine friendly.\r\n\r\n```json\r\n{\r\n  \"platform\": {\r\n    \"uuid\": \"965f91f0-e1b6-11e3-8b68-0800200c9a66\",\r\n    \"common_name\": \"Sphonic BAU Production\",\r\n    \"system_name\": \"sphonic_bau_production\"\r\n    \"tiers\": {\r\n      \"list_of_tiers_here\": {}\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n### Tiers\r\n\r\nThis configuration container holds information about the makeup of each tier within the Platform.\r\n\r\nIt identifies the home network for the machines on this tier.\r\n\r\nIt identifies the network ACL's for the machines on this tier.\r\n\r\n```json\r\n{\r\n  \"tier\": {\r\n    \"uuid\": \"965f91f0-e1b6-11e3-8b68-0800200c9a66\",\r\n    \"name\": \"xml_processing_tier\",\r\n    \"alias\": \"XML Processing Tier\",\r\n    \"home_network\": \"network_uuid_here\",\r\n    \"base_image\": \"base_image_uuid\",\r\n    \"personas_package\": \"personas_package_uuid\",\r\n    \"bootstrap_script\": \"bootstrap_script_name\",\r\n    \"stingray_server\": \"stingray_uuid\",\r\n    \"stingray_pool\": \"stingray_pool_name\",\r\n    \"machines\": {\r\n      \"list_of_machines_here\": {}\r\n    },\r\n    \"network_acls\": {\r\n      \"inbound_open_ports\": {\r\n        \"inbound_network_uuid\": {\r\n          \"port_number\": {\r\n            \"port_name\": {},\r\n            \"protocol\": {},\r\n            \"port_open_reason\": {}\r\n          }\r\n        }\r\n      },\r\n      \"outbound_open_ports\": {\r\n        \"outbound_network_uuid\": {\r\n          \"port_number\": {\r\n            \"port_name\": {},\r\n            \"protocol\": {},\r\n            \"port_open_reason\": {}\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nPull stingray pool names from the stingray machine. API https://support.riverbed.com/content/support/software/stingray/traffic-manager.html .\r\n\r\n### Machines\r\n\r\nThis configuration container holds information about the makeup of each machine witin the Tier.\r\n\r\nIt contains information about the CFE roles assigned to this machine. CFE roles are linked to tiers.\r\nYou cannot assing a CFE role not permitted on the tier this machine is linked to.\r\n\r\nIt contains information about the creation of the machine.\r\n\r\nIt contains information about any shutdown events on the machine.\r\n\r\nIt contains information about the destruction of the machine.\r\n\r\n\r\n```json\r\n{\r\n  \"machine\": {\r\n    \"uuid\": \"965f91f0-e1b6-11e3-8b68-0800200c9a66\",\r\n    \"creation_information\": {\r\n      \"created_date_time\": {},\r\n      \"created_user\": {},\r\n      \"created_method\": {}\r\n    },\r\n    \"start_information\": {\r\n      \"start_event_uuid\": {},\r\n      \"start_user\": {},\r\n      \"start_method\": {},\r\n      \"start_reason_given\": {}\r\n    },\r\n    \"shutdown_information\": {\r\n      \"shutdown_event_uuid\": {},\r\n      \"shutdown_user\": {},\r\n      \"shutdown_method\": {},\r\n      \"shutdown_reason_given\": {}\r\n    },\r\n    \"destruction_information\": {\r\n      \"destruction_event_uuid\": {},\r\n      \"destruction_user\": {},\r\n      \"destruction_method\": {},\r\n      \"destruction_reason_given\": {}\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n### Stingray Configuration Package\r\n\r\nThis configuration container holds information about various stingray machines.\r\n\r\nUsername\r\nPassword\r\nAPI REST Endpoint\r\netc.\r\n\r\n\r\n## Related Work\r\n* [Disnix](http://sandervanderburg.blogspot.co.uk/2011/02/disnix-toolset-for-distributed.html). Building on the powerful Nix functional package system, Disnix has an interesting set of three models: Services, which describes the components of the distributed system including dependencies, Machines which describes the resources available to the system, and Distribution, which describes the mapping between the two.\r\n* [Collins](http://tumblr.github.io/collins/), developed at Tumblr, use explained in this [Ansible at Twitter](https://www.youtube.com/watch?v=fwGrKXzocg4?t=14m30s) talk, as a \"Single Point of Truth (SPOT)\" machine database.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}